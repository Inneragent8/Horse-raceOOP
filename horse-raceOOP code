#include <iostream>
#include <vector>
#include <cstdlib>
#include <ctime>

using namespace std;

class Horse {
public:
    Horse(int id) : id(id), position(0) {}
    
    void advance() {
        if (rand() % 2 == 1) {
            position++;
        }
    }
    
    int getPosition() const {
        return position;
    }
    
    int getId() const {
        return id;
    }
    
private:
    int id;
    int position;
};

class Race {
public:
    Race(int numHorses, int trackLength) : trackLength(trackLength) {
        for (int i = 0; i < numHorses; ++i) {
            horses.emplace_back(i);
        }
    }
    
    void start() {
        cout << "Welcome to the Horse Race! Press Enter to start the race." << endl;
        cin.get();
        
        while (!isFinished()) {
            advanceHorses();
            displayRace();
            cout << "Press Enter for the next turn...";
            cin.get();
        }
        
        cout << "The race is over!" << endl;
    }
    
private:
    vector<Horse> horses;
    int trackLength;
    
    void advanceHorses() {
        for (auto& horse : horses) {
            horse.advance();
        }
    }
    
    void displayRace() const {
        for (const auto& horse : horses) {
            for (int j = 0; j < trackLength; ++j) {
                if (j == horse.getPosition())
                    cout << horse.getId();
                else
                    cout << '.';
            }
            cout << endl;
        }
        cout << endl;
    }
    
    bool isFinished() const {
        for (const auto& horse : horses) {
            if (horse.getPosition() >= trackLength - 1) {
                return true;
            }
        }
        return false;
    }
};

int main() {
    srand(time(0));
    Race race(5, 15);
    race.start();
    return 0;
}
